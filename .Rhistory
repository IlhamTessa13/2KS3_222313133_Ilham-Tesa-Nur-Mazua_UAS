Data1$residual <- model1$residuals
Data1$residuallag <- lag(Data1$residual, n = 1, default = NA)
model3<-lm(residual~residuallag, data=Data1)
model3
Data1$Ybaru <- Data1$Y-(lag(Data1$Y, n = 1, default = NA)*model3$coefficients)
Data1$Xbaru <- Data1$X-(lag(Data1$X, n = 1, default = NA)*model3$coefficients)
#Buang baris pertama yang NA
Data1new <- stats::na.omit(Data1[, c("Ybaru","X1baru")])
Data1new <- stats::na.omit(Data1[, c("Ybaru","Xbaru")])
model1_new <- lm(Ybaru~Xbaru data = Data1new)
#Uji non-autokorelasi
model1_new <- lm(Ybaru~Xbaru, data = Data1new)
summary(model1_new)
dwtest(model1_new)
model3$coefficients
Data1$Ybaru <- Data1$Y-(lag(Data1$Y, n = 1, default = NA)*0.631)
Data1$Xbaru <- Data1$X-(lag(Data1$X, n = 1, default = NA)*0.631)
#Buang baris pertama yang NA
Data1new <- stats::na.omit(Data1[, c("Ybaru","Xbaru")])
#Uji non-autokorelasi
model1_new <- lm(Ybaru~Xbaru, data = Data1new)
summary(model1_new)
dwtest(model1_new)
dwtest(model1)
library(haven)
library(lmtest)
library(car)
library(dplyr)
Data1 <- read_sav("C:/Users/pemal/Downloads/DataPPT13.sav")
View(Data1)
model1 <- lm(Y~X, data = Data1)
summary(model1)
dwtest(model1)
model2 <- lm(Y~X+Pop, data = Data1)
summary(model2)
dwtest(model2)
Data1$residual <- model1$residuals
Data1$residuallag <- lag(Data1$residual, n = 1, default = NA)
model3<-lm(residual~residuallag, data=Data1)
model3
Data1$Ybaru <- Data1$Y-(lag(Data1$Y, n = 1, default = NA)*0.631)
Data1$Xbaru <- Data1$X-(lag(Data1$X, n = 1, default = NA)*0.631)
#Buang baris pertama yang NA
Data1new <- stats::na.omit(Data1[, c("Ybaru","Xbaru")])
#Uji non-autokorelasi
model1_new <- lm(Ybaru~Xbaru, data = Data1new)
summary(model1_new)
dwtest(model1_new)
library(haven)
data<-read.csv("C:/Users/pemal/Downloads/data_kabkota (1).csv")
data
library(Rcmdr)
library(RcmdrMisc)
mean(data$RLS_2020)
mean(data$UHH_2020)
#rata-rata
mean(data$RLS_2020)
mean(data$UHH_2020)
mean(data$HLS_2020)
#median
median(data$RLS_2020)
median(data$UHH_2020)
median(data$HLS_2020)
#modus
mode(data$RLS_2020)
mode(data$UHH_2020)
mode(data$HLS_2020)
#analisis deskriptif secara gabungan
summary(data)
#analisis deskriptif secara gabungan
summary(data)
#analisis deskriptif secara gabungan
summary(data)
#Histogram
par(mfrow=c(1,2)) #set gambar menjadi 2 kolom
hist(data$RLS_2020,xlab = "Illiteracy",col="red", main = "Histogram of Illiteracy")
hist(data$RLS_2020, probability = TRUE, col= "green",xlab = "Illiteracy", main = "Histogram of Illiteracy")
lines(density(Illiteracy),lwd=2,col="blue")
#Histogram
par(mfrow=c(1,2)) #set gambar menjadi 2 kolom
hist(data$RLS_2020,xlab = "Illiteracy",col="red", main = "Histogram of Illiteracy")
hist(data$RLS_2020, probability = TRUE, col= "green",xlab = "Illiteracy", main = "Histogram of Illiteracy")
lines(density(data$RLS_2020),lwd=2,col="blue")
library(shiny); runApp('Project Komstat/ui2.R')
#Histogram
par(mfrow=c(1,2)) #set gambar menjadi 2 kolom
hist(data$RLS_2020,xlab = "Rata-rata Lama Sekolah 2020",col="red", main = "Histogram of RLS 2020")
hist(data$RLS_2020, probability = TRUE, col= "green",xlab = "Rata-Rata Lama Sekolah 2020", main = "Histogram of RLS 2020")
lines(density(data$RLS_2020),lwd=2,col="blue")
#Scatterplot
plot(data$RLS_2020,data$HLS_2020, col="red",pch=20, main = "Scatter Plot RLS vs HLS tahun 2020")
abline(lm(data$RLS_2020~data$HLS_2020),lwd=2, col="blue")
#Histogram
par(mfrow=c(1,2)) #set gambar menjadi 2 kolom
hist(data$RLS_2020,xlab = "Rata-rata Lama Sekolah 2020",col="red", main = "Histogram of RLS 2020")
hist(data$RLS_2020, probability = TRUE, col= "green",xlab = "Rata-Rata Lama Sekolah 2020", main = "Histogram of RLS 2020")
lines(density(data$RLS_2020),lwd=2,col="blue")
#Boxplot
boxplot(data$HLS_2020, xlab="HLS 2020",ylab="Rate", col = "green")
#Histogram
par(mfrow=c(1,2)) #set gambar menjadi 2 kolom
hist(data$RLS_2020,xlab = "Rata-rata Lama Sekolah 2020",col="red", main = "Histogram of RLS 2020")
hist(data$RLS_2020, probability = TRUE, col= "green",xlab = "Rata-Rata Lama Sekolah 2020", main = "Histogram of RLS 2020")
lines(density(data$RLS_2020),lwd=2,col="blue")
#Boxplot
boxplot(data$HLS_2020, xlab="HLS 2020",ylab="Rate", col = "green")
#Korelasi Plot
Korelasi<-cor(data$RLS_2020,data$HLS_2020,data$UHH_2020,data$PKP_2020)
#Histogram
par(mfrow=c(1,2)) #set gambar menjadi 2 kolom
hist(data$RLS_2020,xlab = "Rata-rata Lama Sekolah 2020",col="red", main = "Histogram of RLS 2020")
hist(data$RLS_2020, probability = TRUE, col= "green",xlab = "Rata-Rata Lama Sekolah 2020", main = "Histogram of RLS 2020")
lines(density(data$RLS_2020),lwd=2,col="blue")
#Boxplot
boxplot(data$HLS_2020, xlab="HLS 2020",ylab="Rate", col = "green")
#Korelasi Plot
library(corrplot)
Korelasi <- cor(data[, c("RLS_2020", "HLS_2020", "UHH_2020", "PKP_2020")])
corrplot(Korelasi, method = "square")
#Histogram
par(mfrow=c(1,2) #set gambar menjadi 2 kolom
hist(data$RLS_2020,xlab = "Rata-rata Lama Sekolah 2020",col="red", main = "Histogram of RLS 2020")
#Histogram
par(mfrow=c(1,2)) #set gambar menjadi 2 kolom
hist(data$RLS_2020,xlab = "Rata-rata Lama Sekolah 2020",col="red", main = "Histogram of RLS 2020")
hist(data$RLS_2020, probability = TRUE, col= "green",xlab = "Rata-Rata Lama Sekolah 2020", main = "Histogram of RLS 2020")
lines(density(data$RLS_2020),lwd=2,col="blue")
#Boxplot
boxplot(data$HLS_2020, xlab="HLS 2020",ylab="Rate", col = "green")
#Korelasi Plot
par(mfrow=c(1,1))
library(corrplot)
Korelasi <- cor(data[, c("RLS_2020", "HLS_2020", "UHH_2020", "PKP_2020")])
corrplot(Korelasi, method = "square")
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$RLS_2019)
summary(reg1)
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
#Uji normalitas
shapiro.test(data$RLS_2020)
```{r}
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
res<-reg1$residuals
shapiro.test(res)
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
res<-reg1$residuals
shapiro.test(res)
abs_res<-abs(res)
model_glejser<-lm(abs_res~data$UHH_2017+data$UHH_2018+data$UHH_2019)
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
res<-reg1$residuals
shapiro.test(res)
abs_res<-abs(res)
model_glejser<-lm(abs_res~data$UHH_2017+data$UHH_2018+data$UHH_2019)
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
res<-reg1$residuals
shapiro.test(res)
abs_res<-abs(res)
model_glejser<-lm(abs_res~data$UHH_2017+data$UHH_2018+data$UHH_2019)
model_glejser
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
res<-reg1$residuals
shapiro.test(res)
abs_res<-abs(res)
model_glejser<-lm(abs_res~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(model_glejser)
#Uji Multikolinearitas
cor_matrix <- cor(data[, c("UHH_2020", "UHH_2017", "UHH_20218", "PKP_2019")])
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
#Uji Normalitas
res<-reg1$residuals
shapiro.test(res)
#Uji Homoskedastisitas
abs_res<-abs(res)
model_glejser<-lm(abs_res~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(model_glejser)
#Uji Multikolinearitas
cor_matrix <- cor(data[, c("UHH_2020", "UHH_2017", "UHH_20218", "UHH_2019")])
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
#Uji Normalitas
res<-reg1$residuals
shapiro.test(res)
#Uji Homoskedastisitas
abs_res<-abs(res)
model_glejser<-lm(abs_res~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(model_glejser)
#Uji Multikolinearitas
cor_matrix <- cor(data[, c("UHH_2020", "UHH_2017", "UHH_2018", "UHH_2019")])
print
vif_value<-vif(reg1)
vif
#Uji Autokoreasi
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
#Uji Normalitas
res<-reg1$residuals
shapiro.test(res)
#Uji Homoskedastisitas
abs_res<-abs(res)
model_glejser<-lm(abs_res~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(model_glejser)
#Uji Multikolinearitas
cor_matrix <- cor(data[, c("UHH_2020", "UHH_2017", "UHH_2018", "UHH_2019")])
print(cor_matrix)
vif_value<-vif(reg1)
vif
#Uji Autokoreasi
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
#Uji Normalitas
res<-reg1$residuals
shapiro.test(res)
#Uji Homoskedastisitas
abs_res<-abs(res)
model_glejser<-lm(abs_res~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(model_glejser)
#Uji Multikolinearitas
cor_matrix <- cor(data[, c("UHH_2020", "UHH_2017", "UHH_2018", "UHH_2019")])
print(cor_matrix)
vif_value<-vif(reg1)
vif
#Uji Autokoreasi
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
#Uji Normalitas
res<-reg1$residuals
shapiro.test(res)
#Uji Homoskedastisitas
abs_res<-abs(res)
model_glejser<-lm(abs_res~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(model_glejser)
#Uji Multikolinearitas
cor_matrix <- cor(data[, c("UHH_2020", "UHH_2017", "UHH_2018", "UHH_2019")])
print(cor_matrix)
vif_value<-vif(reg1)
vif_value
#Uji Autokoreasi
dwtest(reg1)
library(lmtest)
dwtest(reg1)
#Analisis Regresi
reg1<-lm(data$UHH_2020~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(reg1)
res<-reg1$residuals
shapiro.test(res)
abs_res<-abs(res)
model_glejser<-lm(abs_res~data$UHH_2017+data$UHH_2018+data$UHH_2019)
summary(model_glejser)
#Uji Multikolinearitas
cor_matrix <- cor(data[, c("UHH_2020", "UHH_2017", "UHH_2018", "UHH_2019")])
print(cor_matrix)
vif_value<-vif(reg1)
vif_value
library(lmtest)
dwtest(reg1)
library(lmtest)
dwtest(reg1)
data
library(haven)
library(Rcmdr)
library(RcmdrMisc)
data<-read.csv("C:/Users/pemal/Downloads/data_kabkota (1).csv")
Dataset<- within(Dataset, {
fitted.RegModel.1 <- fitted(RegModel.1)
residuals.RegModel.1 <- residuals(RegModel.1)
})
# include this code chunk as-is to set options
knitr::opts_chunk$set(comment=NA, prompt=TRUE, out.width=750, fig.height=8, fig.width=8)
library(Rcmdr)
library(car)
library(RcmdrMisc)
library(haven)
setwd("C:/Users/pemal/Downloads")
Dataset <- read.csv("data_kabkota (1).csv")
Dataset<- within(Dataset, {
fitted.RegModel.1 <- fitted(RegModel.1)
residuals.RegModel.1 <- residuals(RegModel.1)
})
RegModel.1 <- lm(UHH_2020~UHH_2017+UHH_2018+UHH_2019,
data=Dataset)
summary(RegModel.1)
Dataset<- within(Dataset, {
fitted.RegModel.1 <- fitted(RegModel.1)
residuals.RegModel.1 <- residuals(RegModel.1)
})
Dataset<- within(Dataset, {
fitted.RegModel.1 <- fitted(RegModel.1)
residuals.RegModel.1 <- residuals(RegModel.1)
})
Dataset
library(MASS, pos=21)
Confint(RegModel.1, level=0.95)
library(shiny); runApp('Project Komstat/ui2.R')
library(shiny); runApp('Project Komstat/ui2.R')
library(shiny); runApp('Project Komstat/ui3.R')
runApp('Project Komstat/ui5.R')
runApp('Project Komstat/ui5.R')
library(shiny); runApp('Project Komstat/ui5.R')
library(shiny); runApp('Project Komstat/ui5.R')
library(shiny); runApp('C:/Kuliah/Tingkat2/Komstat/ProjectRShiny/ProjectRShiny/Dashboard_Karhutla.R')
shiny::runApp('C:/Kuliah/Tingkat2/Komstat/uas')
shiny::runApp('C:/Kuliah/Tingkat2/Komstat/uas')
library(shiny); runApp('C:/Kuliah/Tingkat2/Komstat/ProjectRShiny/ProjectRShiny/Dashboard_Karhutla.R')
runApp('C:/Kuliah/Tingkat2/Komstat/ProjectRShiny/ProjectRShiny/Dashboard_Karhutla.R')
runApp('C:/Users/pemal/Downloads/Dashboard_Karhutla.R')
runApp('C:/Kuliah/Tingkat2/Komstat/ProjectRShiny/ProjectRShiny/Dashboard_Karhutla.R')
runApp('C:/Kuliah/Tingkat2/Komstat/uas')
library(shiny); runApp('C:/Kuliah/Tingkat2/Komstat/ProjectRShiny/ProjectRShiny/Dashboard_Karhutla.R')
runApp('C:/Kuliah/Tingkat2/Komstat/ProjectRShiny/ProjectRShiny/Dashboard_Karhutla.R')
runApp('C:/Kuliah/Tingkat2/Komstat/ProjectRShiny/ProjectRShiny/Dashboard_Karhutla.R')
# Load required libraries
library(shiny)
library(shinydashboard)
library(DT)
library(openxlsx)
library(writexl)
library(WriteXLS)
library(ggplot2)
library(dplyr)
library(plotly)
library(shinycssloaders)
library(readxl)  # For reading Excel files
library(leaflet)  # For interactive maps
library(sf)       # For spatial data
library(geojsonio) # For reading GeoJSON
library(RColorBrewer) # For color palettes
library(car)  # For regression diagnostics
library(lmtest)  # For statistical tests
library(corrplot)  # For correlation plots
runApp('C:/Kuliah/Tingkat2/Komstat/uas')
runApp('C:/Kuliah/Tingkat2/Komstat/ProjectRShiny/ProjectRShiny/Dashboard_Karhutla.R')
runApp('C:/Kuliah/Tingkat2/Komstat/uas')
runApp('C:/Kuliah/Tingkat2/Komstat/uas')
# Install packages yang diperlukan untuk PDF
install.packages(c("tinytex", "kableExtra"))
# Install TinyTeX (LaTeX distribution)
tinytex::install_tinytex()
4.	Gunakan prosedur Cochrane-Orrcut untuk mengatasi masalah autokorelasi
```{r}
shiny::runApp('C:/Kuliah/Tingkat2/Komstat/uas')
runApp('C:/Kuliah/Tingkat2/Komstat/uas')
library(olsrr)
library(haven)
library(dplyr)
datap8<- read_sav("C:/Users/pemal/Downloads/Data_TugasRegresi01 (2).sav")
head(datap8)
y<-datap8$Y
x1<-datap8$X1
x2<-datap8$X2
x3<-datap8$X3
x4<-datap8$X4
model<-lm(y~x1+x2+x3+x4)
apr<-ols_step_all_possible(model)
str(apr)
apr_new<-apr$result
n<-nrow(datap8)
p<-apr_new$n+1
apr_output<-c( apr_new$predictors, p, apr_new$adjr, apr_new$rsquare, apr_new$aic, apr_new$sbc
apr_new$cp)
apr_output<-c( apr_new$predictors, p, apr_new$adjr, apr_new$rsquare, apr_new$aic, apr_new$sbc, apr_new$cp)
apr_print<-as.data.frame(matrix(apr_output,nrow=nrow(apr_new),ncol=7,byrow=FALSE))
colnames(apr_print)<-c(Variabel x, p,  adj_r,rsquare,aic,sbc,mallowscp)
colnames(apr_print)<-c("Variabelx", "p",  "adj_r,rsquare","aic","sbc","mallowscp")
print(apr_print)
colnames(apr_print)<-c("Variabelx", "p",  "adj_r","rsquare","aic","sbc","mallowscp")
print(apr_print)
library(olsrr)
library(dplyr)
library(haven)
data<-read_sav("C:/Users/pemal/Downloads/datauas2.sav")
y<-data$y
x1<-data$x1
x2<-data$x2
x3<-data$x3
d41<-data$d411
d42<-data$d42
x5<-data$x5
model<-lm(y~x1+x2+x3+d411+d42+x5)
model<-lm(y~x1+x2+x3+d41+d42+x5)
summary(model)
apr<-ols_step_all_possible(model)
str(apr)
apr_output<-c(apr_new$predictor, p, apr_new$rsquare, apr_new$adjr,apr_new$aic, apr_new$sbc,apr_new$cp)
apr_print<-as.data.frame(matrix(apr_output,nrow=nrow(apr_new),ncol=7,byrow=false))
apr_print<-as.data.frame(matrix(apr_output,nrow=nrow(apr_new),ncol=7,byrow=F))
colnames(apr_print)<-c("variabel x","p","rsquare","adj_rsquare","aic","sbc","mallowscp")
print(apr_print)
y<-data$y
x1<-data$x1
x2<-data$x2
x3<-data$x3
x4<-data$d411
x6<-data$d42
x7<-data$x5
model<-lm(y~x1+x2+x3+x4+x5+x6)
summary(model)
apr<-ols_step_all_possible(model)
str(apr)
apr_new<-apr$result
n<-nrow(data)
p<-apr_new$n+1
apr_output<-c(apr_new$predictor, p, apr_new$rsquare, apr_new$adjr,apr_new$aic, apr_new$sbc,apr_new$cp)
apr_print<-as.data.frame(matrix(apr_output,nrow=nrow(apr_new),ncol=7,byrow=F))
colnames(apr_print)<-c("variabel x","p","rsquare","adj_rsquare","aic","sbc","mallowscp")
print(apr_print)
apr_new
y<-data$y
a<-data$x1
c<-data$x2
b<-data$x3
z<-data$d411
x<-data$d42
f<-data$x5
model<-lm(y~a+c+b+z+x+f)
summary(model)
apr<-ols_step_all_possible(model)
str(apr)
apr_new<-apr$result
apr_new
n<-nrow(data)
p<-apr_new$n+1
apr_output<-c(apr_new$predictor, p, apr_new$rsquare, apr_new$adjr,apr_new$aic, apr_new$sbc,apr_new$cp)
apr_print<-as.data.frame(matrix(apr_output,nrow=nrow(apr_new),ncol=7,byrow=F))
colnames(apr_print)<-c("variabel x","p","rsquare","adj_rsquare","aic","sbc","mallowscp")
print(apr_print)
y<-data$y
a<-data$x1
c<-data$x2
b<-data$x3
z11<-data$d411
z12<-data$d42
f<-data$x5
model<-lm(y~a+c+b+z11+z12+f)
summary(model)
apr<-ols_step_all_possible(model)
str(apr)
apr_new<-apr$result
apr_new
n<-nrow(data)
p<-apr_new$n+1
apr_output<-c(apr_new$predictor, p, apr_new$rsquare, apr_new$adjr,apr_new$aic, apr_new$sbc,apr_new$cp)
apr_print<-as.data.frame(matrix(apr_output,nrow=nrow(apr_new),ncol=7,byrow=F))
colnames(apr_print)<-c("variabel x","p","rsquare","adj_rsquare","aic","sbc","mallowscp")
print(apr_print)
data<-read_sav("C:/Users/pemal/Downloads/datauas1.sav")
y<-data$produktivitas_y_tonperha
x<-data$pupuk_x_kgperha
x_new<-(x-mean(x))
X_mc
data<-read_sav("C:/Users/pemal/Downloads/Datamodul10.sav")
model<-lm(y~poly(x_new,degree = 2,raw=T)
summary(model)
model<-lm(y~poly(x_new,degree = 2,raw=T))
summary(model)
model<-lm(y~poly(x_new,degree = 2,raw=T))
summary(model)
anova(model,lm(y~factor(x_new)))
model1<-lm(y~poly(x,degree = 2,raw=T))
summary(model1)
y<-data$produktivitas_y_tonperha
x<-data$pupuk_x_kgperha
x_new<-(x-mean(x))
model<-lm(y~poly(x_new,degree = 2,raw=T))
summary(model)
data<-read_sav("C:/Users/pemal/Downloads/datauas1.sav")
y<-data$produktivitas_y_tonperha
x<-data$pupuk_x_kgperha
x_new<-(x-mean(x))
model<-lm(y~poly(x_new,degree = 2,raw=T))
summary(model)
x_new
mean(x)
model<-lm(y~poly(x_new,degree = 2,raw=T))
summary(model)
model<-lm(y~poly(x_new,degree = 2,raw=T))
summary(model)
anova(model,lm(y~factor(x_new)))
data
shiny::runApp('C:/Kuliah/Tingkat2/Komstat/uas')
shiny::runApp('C:/Kuliah/Tingkat2/Komstat/uas')
shiny::runApp('C:/Kuliah/Tingkat2/Komstat/uas')
shiny::runApp('C:/Kuliah/Tingkat2/Komstat/uas')
shiny::runApp('C:/Kuliah/Tingkat2/Komstat/uas')
runApp('C:/Kuliah/Tingkat2/Komstat/uas')
shiny::runApp('C:/Kuliah/Tingkat2/Komstat/uas')
runApp('C:/Kuliah/Tingkat2/Komstat/uas')
runApp('C:/Kuliah/Tingkat2/Komstat/uas')
shiny::runApp('C:/Kuliah/Tingkat2/Komstat/uas')
shiny::runApp('C:/Kuliah/Tingkat2/Komstat/uas')
library(shiny); runApp('C:/Kuliah/Tingkat2/Komstat/uas/2KS3_222313133_Ilham Tesa Nur Mazua_UAS.R')
